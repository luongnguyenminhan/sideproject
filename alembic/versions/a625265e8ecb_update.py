"""update

Revision ID: a625265e8ecb
Revises: cf6752638ff4
Create Date: 2025-04-11 22:58:13.757676

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'a625265e8ecb'
down_revision: str | None = 'cf6752638ff4'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calendar_integrations',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=False),
    sa.Column('token_expiry', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meetings',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('meeting_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('meeting_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('encryption_key', sa.Text(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calendar_events',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('calendar_integration_id', sa.String(length=36), nullable=False),
    sa.Column('external_event_id', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meeting_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_integration_id'], ['calendar_integrations.id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_files',
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_tags',
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('tag_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_usage',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('input_tokens', sa.Integer(), nullable=False),
    sa.Column('output_tokens', sa.Integer(), nullable=False),
    sa.Column('context_tokens', sa.Integer(), nullable=False),
    sa.Column('price_vnd', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transcripts',
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_notes',
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('transcript_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_latest', sa.Boolean(), nullable=True),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('encryption_key', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcripts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chunk_summaries',
    sa.Column('meeting_note_id', sa.String(length=36), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Integer(), nullable=True),
    sa.Column('end_time', sa.Integer(), nullable=True),
    sa.Column('agenda', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('facts', sa.JSON(), nullable=True),
    sa.Column('problems', sa.JSON(), nullable=True),
    sa.Column('solutions', sa.JSON(), nullable=True),
    sa.Column('risks', sa.JSON(), nullable=True),
    sa.Column('next_steps', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_note_id'], ['meeting_notes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_items',
    sa.Column('meeting_note_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_note_id'], ['meeting_notes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vector_indices',
    sa.Column('meeting_id', sa.String(length=36), nullable=False),
    sa.Column('transcript_id', sa.String(length=36), nullable=True),
    sa.Column('meeting_note_id', sa.String(length=36), nullable=True),
    sa.Column('vector_db_id', sa.String(length=255), nullable=False),
    sa.Column('index_type', sa.String(length=50), nullable=False),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('indexed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['meeting_note_id'], ['meeting_notes.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcripts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('role_name', table_name='role')
    op.drop_table('role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('role_name', mysql.VARCHAR(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('role_name', 'role', ['role_name'], unique=True)
    op.drop_table('vector_indices')
    op.drop_table('meeting_items')
    op.drop_table('chunk_summaries')
    op.drop_table('meeting_notes')
    op.drop_table('transcripts')
    op.drop_table('token_usage')
    op.drop_table('notifications')
    op.drop_table('meeting_tags')
    op.drop_table('meeting_files')
    op.drop_table('calendar_events')
    op.drop_table('tags')
    op.drop_table('meetings')
    op.drop_table('calendar_integrations')
    # ### end Alembic commands ###
